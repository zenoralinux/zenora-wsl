name: Download and Publish Latest Release

on:
  schedule:
    # هر روز در ساعت 12 چک کند
    - cron: '0 12 * * *'
  workflow_dispatch:

jobs:
  download-and-publish:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests pygithub
        
    - name: Download latest release assets
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        import os
        from github import Github
        
        # اتصال به GitHub
        g = Github(os.getenv('GITHUB_TOKEN'))
        repo = g.get_repo("zenoralinux/wsl-zenora-rootfs")
        
        # دریافت آخرین ریلیز
        latest_release = repo.get_latest_release()
        print(f"Latest release: {latest_release.tag_name}")
        
        # ایجاد پوشه برای دانلود
        os.makedirs("release_assets", exist_ok=True)
        
        # دانلود تمام assets
        for asset in latest_release.get_assets():
          print(f"Downloading {asset.name}...")
          download_url = asset.browser_download_url
          os.system(f"wget -q {download_url} -P release_assets/")
          print(f"Downloaded {asset.name}")
          
        # دانلود چنج‌لاگ اگر وجود دارد
        try:
          changelog_content = repo.get_contents("CHANGELOG.md")
          with open("release_assets/CHANGELOG.md", "wb") as f:
            f.write(changelog_content.decoded_content)
          print("Downloaded CHANGELOG.md")
        except:
          print("CHANGELOG.md not found")
      shell: python
      
    - name: Publish artifacts
      uses: actions/upload-artifact@v3
      with:
        name: zenora-release-assets
        path: release_assets/
        retention-days: 5
        
    - name: Create summary
      run: |
        echo "## Latest Zenora WSL RootFS Release Assets" >> $GITHUB_STEP_SUMMARY
        echo "Downloaded assets from release ${{ github.event.release.tag_name }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Files:" >> $GITHUB_STEP_SUMMARY
        ls -la release_assets/ >> $GITHUB_STEP_SUMMARY
