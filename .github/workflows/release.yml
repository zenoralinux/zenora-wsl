name: Download and Publish Zenora Release

on:
  schedule:
    - cron: '0 12 * * *'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  download-and-publish:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests pygithub
        
    - name: Download zenora-release.zip
      id: download
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        import os
        from github import Github
        
        g = Github(os.getenv('GITHUB_TOKEN'))
        repo = g.get_repo("zenoralinux/wsl-zenora-rootfs")
        latest_release = repo.get_latest_release()
        
        # پیدا کردن فایل zenora-release.zip
        target_asset = None
        for asset in latest_release.get_assets():
          if asset.name == "zenora-release.zip":
            target_asset = asset
            break
            
        if not target_asset:
          raise Exception("zenora-release.zip not found in latest release")
          
        # دانلود فایل
        os.makedirs("downloads", exist_ok=True)
        download_url = target_asset.browser_download_url
        os.system(f"wget -q {download_url} -O downloads/zenora-release.zip")
        
        # ذخیره اطلاعات برای مراحل بعدی
        print(f"::set-output name=release_tag::{latest_release.tag_name}")
        print(f"::set-output name=release_name::{latest_release.title}")
      shell: python
      
    - name: Upload as workflow artifact
      uses: actions/upload-artifact@v4
      with:
        name: zenora-release
        path: downloads/zenora-release.zip
        retention-days: 5
        
    - name: Create new release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.download.outputs.release_tag }}
        release_name: ${{ steps.download.outputs.release_name }} (Mirror)
        body: "Mirrored release of zenora-release.zip from original repository"
        draft: false
        prerelease: false
        
    - name: Upload to new release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./downloads/zenora-release.zip
        asset_name: zenora-release.zip
        asset_content_type: application/zip
        
    - name: Create summary
      run: |
        echo "## Zenora Release Mirror" >> $GITHUB_STEP_SUMMARY
        echo "Downloaded and republished zenora-release.zip" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- Original Release Tag: ${{ steps.download.outputs.release_tag }}" >> $GITHUB_STEP_SUMMARY
        echo "- Original Release Name: ${{ steps.download.outputs.release_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- File Size: $(du -h downloads/zenora-release.zip | cut -f1)" >> $GITHUB_STEP_SUMMARY
